/**
 * Created by andy on 10/24/16.
 */
public class CreateList implements Runnable {

    CoarseConcurrentLinkedList list;
    public CreateList (CoarseConcurrentLinkedList list){
        this.list = list;
    }

    public void run(){
        System.out.println("add from thread 1:" + list.add(5));
        System.out.println("add from thread 1:" + list.add(2));

        System.out.println("contains from thread 1:" + list.contains(2));
        System.out.println("contains from thread 1:" + list.contains(5));

        System.out.println("remove from thread 1:" + list.remove(2));
        System.out.println("contains from thread 1:" + list.contains(2));

        System.out.println("add from thread 1:" + list.add(6));
        System.out.println("contains from thread 1:" + list.contains(6));
    }

    public static void main(String[] args){
        CoarseConcurrentLinkedList list = new CoarseConcurrentLinkedList();
        CreateList l1 = new CreateList(list);
        CreateList2 l2 = new CreateList2(list);
        Thread t1 = new Thread (l1);
        Thread t2 = new Thread (l2);
        t1.start();
        t2.start();
    }
}

class CreateList2 implements Runnable {

    CoarseConcurrentLinkedList list;

    public CreateList2(CoarseConcurrentLinkedList list) {
        this.list = list;
    }

    public void run() {
        System.out.println("add from thread 2:" + list.add(8));
        System.out.println("add from thread 2:" + list.add(7));

        System.out.println("contains from thread 2:" + list.contains(8));
        System.out.println("contains from thread 2:" + list.contains(7));

        System.out.println("remove from thread 2:" + list.remove(7));
        System.out.println("contains from thread 2:" + list.contains(7));

        System.out.println("remove from thread 2:" + list.remove(8));
        System.out.println("contains from thread 2:" + list.contains(8));

        System.out.println("add from thread 2:" + list.add(9));
        System.out.println("contains from thread 2:" + list.contains(9));

    }
}
